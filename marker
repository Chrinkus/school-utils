#!/bin/bash

CMD=$(basename -- "$0")

# Print usage when called without arguments
if [ "$#" -eq 0 ]; then
        echo "Usage: $CMD file.csv"
        echo "Try '$CMD --help' for more information."
        exit 1
fi

# Help
function print_help() {
cat <<- _EOF_
	Extracts grade information from exported report. By default prints
	to standard output but can create a file for output with -c.

	  $CMD [option] file.csv

	Options:
	  -h, --help      Print this help message.
	  -c, --create    Create an appropriately named output file.

_EOF_
}

if [ $# -eq 1 ]; then
        case $1 in
                -h|--help)
                        print_help
                        exit
                        ;;
        esac
fi

# Field widths
ID=12
LAST=16
FIRST=12
EMAIL=32

# Printf format string
FMT_HEAD="%-${ID}s %-${LAST}.${LAST}s %-${FIRST}.${FIRST}s %-s\n"
FMT_LINE="%-${ID}s %-${LAST}.${LAST}s %-${FIRST}.${FIRST}s %3.0f\n"

function print_line() {
        while read id last first grade; do
                printf "${FMT_LINE}" "$id" "$last" "$first" "$grade"
        done
}

extract_out_filename() {
        CSV=$(basename -- "$1")
	echo "$CSV" |
		sed -E 's/^([A-Z]{4}-[0-9]{4}).*([0-9]{6}).*$/\1_\2.txt/'
}


# Default output
OUTFILE=/dev/stdout
while [[ $# -gt 1 ]]; do
        case "$1" in
                -c|--create)
                        OUTFILE=$(extract_out_filename "$2")
                        shift
                        break
                        ;;
        esac
done

INFILE=$1
echo "Writing to $OUTFILE"
exec 1>"$OUTFILE"

# Print Header
printf "${FMT_HEAD}" "STUDENT ID" "LAST NAME" "FIRST NAME" "GRADE"

# Print Lines
cat "$INFILE"                   \
        | tail --lines +2       \
        | tr ' ' '-'            \
        | tr ',' '\t'           \
        | cut --fields 1-3,5    \
        | sort --key 2 --key 3  \
        | print_line

